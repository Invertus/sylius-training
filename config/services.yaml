# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en_US

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    _instanceof:
        Sylius\Bundle\ResourceBundle\Controller\ResourceController:
            autowire: false
        Sylius\Bundle\ResourceBundle\Form\Type\AbstractResourceType:
            autowire: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

#    App\Context\TimeBasedChannelContext:
#        tags: 
#            -
#                name: sylius.context.channel
#                priority: 10
            
    app.shipping_calculator.flat_rate_with_extra_fee:
        class: App\ShippingCalculator\FlatRateExtraFeeCalculator
        tags:
            -
                name: sylius.shipping_calculator
                calculator: flat_rate_with_extra_fee
                form_type: App\Form\Type\ChannelBasedFlatRateExtraFeeConfigurationType
                label: 'Flat rate with extra fee'

    App\VerifiedSupplierNotifierInterface: 
        class: App\SyliusMailerVerifiedSupplierNotifier
        public: true
        
    App\Form\Type\SupplierType:
        arguments:
            - '%app.model.supplier.class%'
    
    App\Menu\SupplierMenuListener:
        tags: 
            - { name: kernel.event_listener, event: sylius.menu.admin.main, method: __invoke }
             
    SM\Factory\FactoryInterface: "@sm.factory"

    app.one_click_checkout_button:
        class: Sylius\Bundle\UiBundle\Block\BlockEventListener
        arguments:
            - 'oneClickCheckoutButton.html.twig'
        tags:
            - 
                name: kernel.event_listener
                event: sonata.block.event.sylius.shop.product.show.add_to_cart_form 
                method: onBlockEvent
                
    App\Listener\AssignTrackingCodeToShipmentListener:
        public: true
